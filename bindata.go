// Code generated by go-bindata.
// sources:
// www/index.html
// www/js/reconnecting-websocket.min.js
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _wwwIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x59\x79\x6f\xdb\x38\x16\xff\xdb\xfa\x14\x0f\x9a\x3f\x62\x3b\xb1\x45\x4b\x3e\x6b\x2b\x80\x2f\xed\x01\xcc\xec\xa2\xe9\xa0\x0b\x14\x69\x41\x4b\x74\xcc\xa9\x4c\x09\x12\x1d\x37\x3b\xe8\x77\x5f\xf0\x90\x4d\x4b\xca\x51\xcc\xee\x4e\x0f\x80\x7a\x7c\x17\x7f\xef\xd0\xa3\x3c\xdb\xf1\x7d\x0c\x31\x66\x0f\xbe\x4d\x98\x0d\xb7\xd6\x6c\x47\x70\x74\x6b\x35\x66\x7b\xc2\x31\x84\x3b\x9c\xe5\x84\xfb\xf6\xaf\x1f\x82\xce\xd8\x3e\xd1\x19\xde\x13\xdf\x7e\xa4\xe4\x98\x26\x19\xb7\x21\x4c\x18\x27\x8c\xfb\xf6\x91\x46\x7c\xe7\x47\xe4\x91\x86\xa4\x23\x1f\x6e\x80\x32\xca\x29\x8e\x3b\x79\x88\x63\xe2\xf7\xec\x5b\x0b\x00\x60\x96\x87\x19\x4d\x39\xe4\x59\xe8\xdb\xce\x6f\xb9\x93\x91\x30\x61\x8c\x84\x9c\xb2\x87\xce\x91\x6c\xf2\x24\xfc\x4a\x78\x77\x4f\x59\xf7\xb7\xdc\xbe\x9d\x39\x4a\x40\xf8\xc0\x29\x8f\xc9\xed\xbf\x08\xdf\x65\x07\xf8\x48\x36\xb0\x22\xfb\x24\x9f\x39\x8a\x6e\x59\x33\x47\x9d\x62\xb6\x49\xa2\x27\x21\x40\x59\x7a\xe0\x40\x23\xdf\x5e\x33\xbc\x89\xc9\x32\x3e\x70\x4e\xb2\x9f\x71\xba\x38\x70\x9e\x30\x1b\xf8\x53\x4a\x7c\x7b\xa3\x9f\x1e\x71\x7c\x20\x05\x33\x68\x6e\xf8\x19\xa7\x36\x24\x2c\x8c\x69\xf8\xb5\xaa\xa9\xd9\x9a\xda\xb7\x96\xd5\x98\x85\x98\x3d\xe2\x5c\x5a\xcb\x48\x9e\x7e\xc9\x08\x8b\x48\x26\x4e\xa0\x76\xca\x4c\x79\x4c\xc8\xeb\x5c\x78\x9f\xc6\x94\x1f\x22\xf2\x2a\x67\xba\xc3\x79\x2d\xd7\xec\x84\xe0\x23\xce\x20\x3c\x79\xae\x4e\x12\x81\x0f\x5b\x1c\xe7\x44\x6d\x3f\x64\x38\xa2\x84\x71\xf0\xe1\x93\xfd\x13\x42\xbd\x5e\x10\xd8\x37\x60\xff\x84\x82\x1e\x0a\x90\x5c\xf6\xd6\x28\x58\xf7\xe4\xd2\x5d\xa1\xf5\xca\x95\x4b\x6f\x89\x56\x4b\x4f\x2e\xfb\x0b\xb4\x58\xa8\xe5\x60\x8e\xe6\xf3\xbe\x5c\x0e\x27\x68\x3e\x19\xca\xe5\x68\x8c\x26\xe3\x91\x5c\x8e\x47\x68\x3c\x1a\xcb\xe5\x64\x88\x46\xc3\x89\x5c\xce\x07\x68\x30\x50\xcb\x45\x1f\xf5\xfb\x73\xb9\x5c\x7a\xa8\xef\x2d\xe5\x72\xe5\x22\xcf\x5d\xc9\xe5\xba\x87\xdc\xde\x5a\x2e\x03\x84\x7a\x48\xf9\x1b\x04\x08\x21\x54\x50\x03\x34\xd0\xbc\xbd\x35\x9a\x6b\x0d\xee\x4a\xf3\x2e\x3d\x6f\xd9\x53\x4e\x2e\xbc\xfe\xa2\xa7\x7d\xe8\x0f\xe6\x5a\xef\x64\x38\x9c\xb8\x9e\xf6\x77\x34\x76\xc7\xfa\x14\xe3\x91\xf6\x61\x38\x99\x0c\x3d\x85\xc3\x60\x32\x1f\x78\xea\x6c\xfd\xf9\xa2\xf0\xd7\x5b\x2e\xbd\x7e\x81\xd9\xca\xed\x0f\x35\x92\xeb\x5e\x7f\xa1\xf1\x0d\xd0\x40\xf9\x8b\x50\x10\x0c\x06\x05\x75\x35\x28\x50\x0f\x16\x9a\xd7\x5d\x05\x13\xad\xc1\x5b\x06\x23\xad\xb7\xbf\x08\x86\xde\x42\xa3\x1e\xf4\xbd\xa1\xf6\x2c\x70\xb5\x67\xa3\x71\x80\xb4\xbf\xe3\xd1\x3a\x70\x0b\xd4\xd7\x2b\x7d\xb6\xf9\x60\xbd\xe8\xad\x34\xea\xeb\x49\x6f\xac\xd1\x59\x8f\x35\x3a\x2b\x77\x3d\xd4\x98\xad\x7b\xeb\xbe\x46\x32\x40\x6b\x57\xe3\x1b\x04\xeb\x1e\x42\xf6\xbd\x65\x35\x1c\x07\xfe\x42\x38\xe8\x0c\x5d\x8a\x56\xf1\x8d\x5b\x0d\xbc\x4f\x35\xc9\x87\x28\x09\x0f\x7b\xc2\x78\xf7\x81\xf0\x75\x4c\xc4\x72\xf1\xf4\xb7\xa8\x79\x55\xce\xfa\xab\xd6\x54\x49\xf2\x6f\xe0\xc3\x49\x85\x90\xd3\x8a\x9b\x57\x6e\x24\xb8\xac\x86\xac\x83\xd7\x4d\x98\xe5\x22\xd5\x2b\x39\x69\xc0\x50\x51\x6b\x42\xd4\xf7\xeb\x16\x8c\x2e\x20\x0d\x48\x29\xa9\xff\x2c\x5f\xab\x5e\x76\x86\xd7\xf5\x9b\x0d\x44\x1a\x50\x72\xd2\x82\xa1\xa2\xce\x84\xaa\xf5\x5f\x92\x6c\x8f\x63\x9a\x93\x79\x96\xe1\x27\x51\xf1\xf7\x53\xab\xb1\x3d\xb0\x90\xd3\x84\x9d\xb7\x9b\x2d\xf8\xdd\x6a\x48\x91\x64\xbb\xcd\x89\x68\x0e\xa8\xdb\xd7\xa4\x6d\x86\xf7\x24\xa7\xff\x26\x92\x8a\x04\x79\x9b\x64\xd0\x14\x7b\x14\x7c\x04\x53\xa0\xb3\x81\x3b\x05\x7a\x7d\xdd\x12\x7a\x1a\x97\x76\x3f\xd1\x7b\x1f\x9a\x4a\xf1\xe7\x7e\x0b\xae\xa1\xdf\x3e\xe9\x6c\xd3\x76\xb1\xe5\xb5\xa0\x03\xc3\xd3\xa3\xdb\x6a\x37\x4f\x6c\x9f\x5d\xb1\xd9\x6f\xd3\xb6\xda\x35\xb7\x3c\xa1\xd2\x78\xee\x0b\xa8\x1a\xdf\x2d\xf1\xcf\x38\xa2\x65\x9c\xbc\xda\xe3\x25\x00\xd5\xd6\xf9\xd9\x07\x9e\x1d\x88\xd0\xa5\x20\x3d\xcb\x08\x38\xd1\xcd\xff\xe5\xef\xfd\xd4\x74\xfe\xd7\x34\xc2\xdc\x74\xfe\x54\x4c\x37\x70\x24\xf4\x61\xc7\xd5\x69\xaa\x41\x82\x13\x67\x37\x26\xec\x81\xef\x8c\x98\x9d\xf5\xc9\x78\x5d\x3c\xb6\x9b\xbd\x4e\xa1\xf9\x1a\xce\xf6\xc4\x96\xa6\x17\x88\x1b\x7e\xaa\xc4\x9d\xef\xd3\x66\x84\x39\x56\x3e\xa9\x12\xef\xea\xc4\x95\x83\x04\x80\x0f\x47\xca\xa2\xe4\xd8\xa5\x8c\x91\xec\xa3\x20\x76\x06\x68\x5a\x61\xdf\x49\x53\x65\xfe\xbf\x4a\xaa\xe3\x99\xfc\x31\xc1\xd9\x7b\x12\xf2\x26\xba\x01\x74\x63\xf4\x13\x3d\xba\x9c\x09\x4a\xa7\xcc\x98\x0d\xce\x64\x39\x62\x8e\x0b\x78\xac\x12\x8c\x80\xa6\x40\x61\x06\x82\x55\x61\x27\x4f\x25\x5a\x61\x98\xec\x45\xe5\x42\x72\xe0\xc0\xc8\x37\x0e\x31\x65\x04\xe8\x16\x9e\x92\x03\x44\x09\xe3\x70\xc4\x8c\x43\xcf\xe9\xf3\x1d\xa4\xc9\x91\x64\xc0\x8a\xe4\x8c\xce\x81\x11\xda\x84\x07\xaa\x68\x3a\x7a\xd9\xae\x54\x54\xab\xdd\x45\xae\xf0\x5a\xb8\xfd\x45\x74\x04\x0a\xed\xf2\x41\x1d\xe9\x67\xc1\xa4\xd0\xf6\x65\xfc\x2a\x5c\xad\xce\x59\x9b\xc6\xd9\x87\x93\xf9\x32\x5e\x8e\x0a\x4f\x81\xf7\x96\xc6\xf1\x1d\x7f\x8a\x45\x87\x28\xe6\x8b\x4f\xf4\xbe\xc4\x21\x03\x22\xbd\xad\x06\xe0\x06\x4e\x1e\xaa\xa5\x11\x97\xfa\xbc\xfa\xa7\x68\xe1\x46\x66\x15\xdd\xfd\xcd\xb9\x55\x16\x78\x3d\xbb\xce\x12\xa5\xfc\x32\x5f\x27\xfa\x0c\x26\xe9\xbf\x93\x63\x66\x9c\x2b\x06\x9f\x89\x74\x3d\x5f\x6d\xac\x7f\xc6\x7c\xd7\xcd\x29\x6b\xea\x98\xb7\xda\xcd\x7a\x84\x1c\x4f\x9e\xe4\x8c\xc6\x0b\xd1\xbf\xe0\x31\xe3\x5f\x85\xc7\x71\x7f\x3c\x07\xde\x93\x3c\xa5\x19\x16\x14\x23\x13\xf4\x6b\xf8\xcd\x89\x50\xe2\x7f\x31\x0f\xdc\x4b\x89\x52\x1e\x18\xaf\x7d\x7d\x0c\x83\x62\x9c\xa6\x90\x37\x91\xbb\xfa\x29\x08\x06\x23\xcf\xbb\x9a\x82\xe3\xc0\x32\x89\x13\xf1\x32\x06\xbe\x23\x32\x13\xac\x73\x02\x34\xeb\x0e\xe8\xb8\x45\x7e\x7d\x11\x2f\xfa\x81\x75\x99\x09\xb2\x92\xbb\xfb\xe4\x51\x8e\x17\xed\x01\xb2\x4a\xe1\xaf\x07\xa1\xd3\x43\x25\x77\xcd\x20\x4a\x63\x2f\x45\xed\x24\x98\xb0\x67\x6d\x38\x2e\x5c\x83\x9d\x72\x98\x67\x14\xc7\xb6\x29\x26\x26\x9a\x79\x4c\x1f\x18\xf8\x60\x87\x84\x71\x92\x55\xf6\x17\x38\x27\xb2\xd3\xfa\x60\xef\x69\x14\xc5\xc4\x7e\x16\xe1\x4d\x8c\xc3\xaf\x57\x62\x5b\x48\x0a\x89\x9c\x63\x4e\xde\x81\x0d\xd7\xaa\x24\xe5\xb3\xf0\x07\xb2\x74\x6f\xd0\xb3\x74\xdf\xe5\x49\x40\xbf\x91\xa8\xe9\xb6\x24\x43\x44\x73\x8e\x59\x68\x4a\x17\x24\x83\xb5\xec\xcb\x07\x31\xa4\x09\xeb\x37\x65\x34\x74\x14\x2b\xf4\x02\x25\xa1\xaa\xa6\x04\xee\xc4\x1c\x68\x24\x7f\x31\x22\xbe\x39\xfb\xcb\x02\x6f\x48\xff\xb3\x48\x29\xff\xcd\xa1\x54\x67\x84\x49\x32\x32\xc3\x71\x60\x8b\x73\x0e\x45\x46\x9a\x5a\x2f\xab\xc2\xf3\x26\x93\xed\xf6\x0d\x55\x51\x7b\xf2\x57\xca\xe2\xa2\x2a\x84\x43\x4e\xad\x96\xb6\x8b\x50\xa5\x62\x9e\x01\x4e\x95\xcc\xc5\x61\x7e\xa8\x66\x1c\x07\xee\xe2\xe4\xf8\x06\x64\x26\x93\x30\x44\xe8\x7f\x84\xcc\x65\xc3\xc8\xe3\xe4\xf8\x67\x43\x73\x21\xaa\x1a\x4a\xbd\x9d\x9a\x8e\x72\x62\x7c\xae\xa5\x5c\x30\x3c\xd3\x53\xea\xc3\xf0\x27\x35\x95\x0b\x67\x8c\xae\xf2\x4c\xac\xab\x1b\xe5\xbe\xe2\x38\xf0\x61\x47\x73\x78\x20\x3c\x87\x10\xc7\xe2\xf6\x43\x1e\x49\xf6\x04\x9c\xee\x09\x1c\x89\xd8\x01\x46\x8e\xb0\xc1\x39\xd9\x60\x16\x49\xff\x8c\x86\x24\x60\x5b\x60\x16\x05\x07\x16\x36\x0b\x26\xd5\x95\xe4\x7c\xcc\xf2\x24\x26\xdd\x38\x79\x38\x6f\x5a\x8d\x06\xdd\x42\xb3\x72\xef\xd2\x23\x4f\xe5\xa6\x53\x08\x76\x8d\x2b\x0f\xea\xa2\x81\x50\x54\x77\xdf\xa9\xf2\x57\x2f\x3e\x8d\x2a\x93\x1c\xbe\xe5\x40\x84\x37\x79\x8d\xd1\x4f\xf4\xbe\x73\x71\x41\x6a\x3d\xaf\xa8\xed\x8b\xd2\x12\x03\x8c\xfc\x7f\xbe\x14\x55\xb9\x5b\xa7\x7d\x35\xdc\x9e\x38\xe4\xb4\xd4\xfa\xd1\x38\x65\xe7\xe9\xa8\x1c\x2a\x63\x70\x92\xd1\x32\x58\x8b\x19\xaa\x3c\x5f\x99\x2c\x3f\xea\x89\xcc\xbd\xb2\x0f\xf2\xcd\x25\xad\xcb\x6d\xd3\xae\x7a\xa9\x29\xb2\xb4\x25\x8d\xdd\x11\x7e\x48\xe1\x63\xf1\x05\x59\x7e\x72\x92\xdf\x95\x13\x96\x9f\xbe\x46\x89\xfe\x77\xc8\xe2\x77\x69\x92\xf1\xa2\x1f\x1e\x32\xaa\x2e\xef\x39\xc9\x1e\x49\x76\x7e\xb5\xc5\x49\x28\x0f\x34\x55\xdb\x69\x96\xf0\x24\x4c\xe2\xa9\x25\xb3\x52\x71\x77\x0b\x2a\xf8\xbe\x0f\xf6\x8e\xf3\x34\x7f\x67\xeb\x3b\xc7\x69\x0b\xec\x63\x9e\xbf\x13\x6d\xe2\x3b\x90\x38\x27\x35\xdb\x6a\x57\x7f\x46\x38\xd5\x90\x2f\x01\x7a\x6f\x7c\x23\xff\x48\x36\x77\xf2\x80\xcd\x93\xfc\x35\xd8\x8e\x23\x3a\x82\x76\x69\x97\xe4\x5c\x12\x8f\xb9\xb3\xd9\xd8\xa2\x84\x4f\xb9\x92\xb0\x30\x4e\x72\xd1\x9a\x0a\xa4\x9b\xa4\x05\xbf\x9b\xe5\x67\x2f\x0a\xeb\x2b\x9a\x6b\xc3\x24\xb2\x5b\xdf\x2f\xf5\x24\x29\x61\x6f\x53\xb3\x7c\x56\xc7\x9e\xe4\x39\x7e\xa8\x78\xa3\xbf\x2c\x19\x28\xfc\xfd\xee\x1f\xbf\x74\x53\x9c\xe5\xa4\x49\xba\x72\x9c\x11\x5d\xae\xbe\xa5\x58\x8d\xef\x3a\x62\x66\x8a\xff\x61\x24\x85\x32\xbb\xf8\x8e\xa7\xb5\xbe\x09\x4e\xa3\x4c\x6a\x10\xbd\xd4\xf6\x2a\xa8\xa6\xb2\xe5\x4b\x9a\x5e\x86\xf6\x12\x99\x7a\x74\x5f\xea\x02\x67\x8c\x55\xf1\xfe\x61\x74\xa5\x1a\xfb\xf4\x15\xf3\x4d\xc0\xca\x3e\x50\x03\x69\xa1\xe1\x55\x30\x95\x82\x65\xbd\xf4\xcb\x00\x16\xc7\xae\x87\xae\xdc\xbc\x24\x5c\xf2\xcf\xf9\xf7\x2c\x6b\xe6\xa8\xdf\xa9\xfe\x13\x00\x00\xff\xff\xd8\x79\x72\x14\x8e\x1b\x00\x00")

func wwwIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_wwwIndexHtml,
		"www/index.html",
	)
}

func wwwIndexHtml() (*asset, error) {
	bytes, err := wwwIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/index.html", size: 7054, mode: os.FileMode(420), modTime: time.Unix(1476456207, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwJsReconnectingWebsocketMinJs = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x56\x5d\x6f\xab\x36\x18\xbe\xdf\xaf\x20\x5c\x20\x7b\xc7\x07\x35\xeb\x76\x13\xe4\x55\x55\x1b\x4d\x95\xba\xf6\xa8\xad\xb6\x8b\xaa\x3a\x32\xf6\x1b\xe0\x14\xec\x08\x4c\x7b\xaa\x84\xff\x3e\xd9\x06\x42\x80\xf6\xa6\x93\xa2\x60\xbf\x1f\xf6\xe3\xf7\xe3\xb1\x17\x9b\x5a\x72\x9d\x29\x89\x18\x89\xf1\xce\xef\xa6\x3e\xa5\xfa\x6d\x0b\x6a\xe3\x09\xd8\x64\x12\x82\xc0\x7d\x43\x56\x88\x33\x37\x44\x8f\x4f\x24\xc6\x2b\xbf\x96\x6e\x2e\xfc\x45\xe7\x53\x28\x51\xe7\x10\x04\xee\x1b\xc2\xcf\xad\x2a\x75\x75\x76\x3c\xa5\x31\xc2\x2b\x16\xde\x01\x57\x52\x02\xd7\x99\x4c\xfe\x85\xf8\x5e\xf1\x67\xd0\x46\xd7\x20\x9d\x66\x15\xe9\x01\xe2\x5d\x37\xf4\x18\x8a\x09\x27\x62\x20\xc9\x1d\xfe\x17\x56\x7a\x9c\x0a\xc5\xeb\x02\xa4\x0e\x79\x09\x4c\xc3\xfa\x05\xa4\x46\xfe\x45\x5d\x69\x55\xd8\x89\x8f\xa3\x12\x74\x5d\x4a\x8f\x87\x99\xcc\xf4\x40\x85\x18\x59\x2c\xcd\x2f\xc6\x84\x37\x66\x3d\xa0\x3b\x01\x71\x9d\xac\x16\x4b\xc2\x6a\xad\x0a\xa6\x33\x7e\xbb\x05\xb9\x5a\x9c\x90\xb2\x43\x7f\x25\x35\x94\x2f\x2c\x5f\x2d\xe1\x94\x14\xec\xe7\xdd\x44\x71\x0a\xbf\x1f\xcc\x2f\x81\xb3\xb7\xd5\x32\xfc\x83\xe8\xac\x00\x55\x1f\xcc\x7e\x83\xd3\x26\x12\xfb\x3d\x12\x74\xd7\xe0\x68\xa3\x4a\x64\x50\x6c\xbc\x4c\x7a\x80\x4d\x48\x1e\x37\x4f\x74\x2e\xea\xe2\x71\xf3\x74\x66\xfe\x56\xf0\xb8\x79\x8a\x8c\x69\x58\x97\x39\x8d\x89\x1d\xf6\x7b\x9f\x6b\x0d\xc5\x56\x57\xf4\xa4\x53\x30\xf1\x76\xaf\x99\x06\xda\x27\x20\xbc\xb8\xbd\xb9\x59\x5f\x3c\x5c\xdd\xfc\xe5\x8c\xb6\xa5\xd2\x8a\xab\x9c\xca\x3a\xcf\x23\x83\x28\x25\x09\xb5\x19\xca\xe8\x62\x49\x7e\x98\xbf\xe7\x49\xe8\x73\x28\x6c\xf0\x45\xf6\xe2\xe3\xe8\x39\x64\x42\xd8\x30\x5f\x67\x95\x06\x09\x25\xf2\xd5\x16\xa4\x7f\xc8\x32\xc3\xbb\x24\x54\xd2\x48\x11\xc3\x0d\x26\x73\x3e\x3c\x57\x15\x4c\x9d\xac\xf8\x03\xaf\xbe\xce\x66\x5c\x7b\xdd\xfb\xfe\x05\x54\x15\x4b\x66\xf6\x6d\x15\xef\x7b\x42\x59\xaa\x72\xea\x67\xc5\xce\xcb\xc6\x78\xec\x48\xa7\x6b\x85\x71\x26\x05\x7a\xc6\x5d\xe6\x0a\xf5\x02\x63\x9f\x19\xe9\xb1\x9b\xc8\xaa\x2d\xd3\x3c\xb5\x26\xf4\xf9\x78\x7e\x6c\x6a\xf2\x40\x7b\xdc\x31\xde\xa5\x54\xc2\xab\xd7\xd7\x09\x4a\x4c\x89\x11\xbe\xdf\x3f\x3e\x61\x12\xef\xf7\xa3\xd5\x50\x7e\x14\x77\x8c\x09\x4a\x42\xdb\x4e\xfb\x3d\x73\x83\xf3\x3c\xc7\x41\xc0\x95\xac\x54\x0e\x4e\x84\xfc\x59\x56\xf0\x89\xcf\x5c\xed\x7e\x6d\xb5\x3e\xb1\xfb\x63\x5b\x90\x82\xa6\x04\x68\x05\xfa\xc1\xb5\x14\x1a\x50\xc7\xe7\x76\xed\xa4\x4a\x7e\x6d\xdb\xb5\xdb\xd8\xd4\xfd\x09\x11\xa1\x2b\x3d\x3b\x5d\x36\x24\x09\x47\x5d\x8d\xa3\xb4\x2d\x6a\x3a\x00\xc5\x73\x60\x65\x07\x16\x3e\x1b\x1a\xb7\x7e\x0f\x2c\x39\xb4\x6c\xda\x0f\x49\x32\xdf\xed\xb7\xdf\xd6\x37\x56\x37\xa1\x88\x36\xb2\x79\xdb\xa8\x38\x12\x61\x56\xf5\x10\x68\x4c\x62\xdb\xf8\xa3\xac\x0b\xdc\x90\xb4\xeb\xc8\xc3\x91\x39\xde\x65\x1b\x34\x3e\x76\x6a\x39\x85\x64\xf8\x1d\x70\x17\xd7\xb7\xf7\xeb\xcb\xc9\x1e\x79\xc7\x03\x18\x47\x90\x57\xb0\x7b\xcf\xbd\x67\xb2\xc3\x59\x86\x25\x19\x89\x90\x2b\x01\x94\xdb\x0f\x11\x66\x95\x4a\x49\xca\xdb\x01\x11\xe1\x2b\xab\x2e\x72\x60\x46\xd6\x0d\x67\x8e\x6c\xca\xff\xc7\x7e\x8f\x3e\x9b\xc6\x96\xdd\xda\x3c\x7e\x70\x6c\x57\xf6\x40\x07\x89\xeb\x0a\xee\xd7\xbf\x99\x4e\xc3\xad\x7a\x45\x03\xa5\xbd\x74\xe6\xd2\x8c\xa3\xf9\xae\x99\x31\xfd\xf2\x85\x24\x96\x15\xd0\xe2\x04\x37\x04\xfe\x4c\xc2\xb9\xdb\xee\x6c\x5e\xbc\x02\xdc\xb8\xca\x68\x39\xf3\x88\x5b\x3e\x1b\xb8\x9e\xa0\x1d\x29\xc5\xa1\x60\x9a\xb9\x20\x71\x93\xf5\x4e\x8f\x23\x6e\x55\xd4\x59\x4c\x42\xcc\xdb\xea\xb5\xfc\xfc\xbf\x22\x6c\x2f\x82\x16\xdf\x6c\x72\x9d\x09\x36\x71\x5a\x52\xea\xee\x85\xe1\xab\x23\x08\x7a\x62\x46\x8b\x65\x4b\xd3\x15\x48\x71\x04\x34\xdb\xa0\x14\xbb\x37\xce\xe7\x30\x9b\x95\x07\x80\x53\xbb\x15\x8a\x71\xa4\xd3\x52\xbd\xfa\x57\x37\xff\x9c\x5f\x5f\x5d\x7e\xbf\x7f\x38\x7f\x58\x7f\x5f\xdf\xdd\x79\x2b\xef\x1b\xab\xab\x4c\x26\x9e\x56\x5e\x5f\x3e\xde\x2b\xc4\x95\x5b\xb3\x71\x90\x47\xd4\xe0\x9e\x9f\x87\x57\x4d\xff\xfe\x64\x41\x80\x18\x5d\xc2\x29\x36\x0f\x8d\x13\x92\x06\x41\xda\xd2\xad\xf1\x69\xba\x9b\x70\x53\x42\x95\x0e\xd9\x75\x60\x88\x9b\xa6\x7d\xef\x31\x47\x85\x66\xed\x19\x42\x6e\xc8\xb1\x7e\x84\x71\xc6\xa0\x8f\xd9\x47\x56\x93\x5a\x9f\x9a\x8c\x4a\xcd\x19\x74\xd9\x32\x0c\xcb\x06\x3c\x36\xff\x4c\x63\x96\xc5\xc7\xa4\xce\x2c\x7d\x8e\x9c\x9c\xa4\xd5\xad\x2f\xa7\x5c\xcb\x1a\x1c\xfd\xf2\x5f\x00\x00\x00\xff\xff\xb7\x83\xb6\x2c\x1c\x0c\x00\x00")

func wwwJsReconnectingWebsocketMinJsBytes() ([]byte, error) {
	return bindataRead(
		_wwwJsReconnectingWebsocketMinJs,
		"www/js/reconnecting-websocket.min.js",
	)
}

func wwwJsReconnectingWebsocketMinJs() (*asset, error) {
	bytes, err := wwwJsReconnectingWebsocketMinJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/js/reconnecting-websocket.min.js", size: 3100, mode: os.FileMode(420), modTime: time.Unix(1476401448, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"www/index.html": wwwIndexHtml,
	"www/js/reconnecting-websocket.min.js": wwwJsReconnectingWebsocketMinJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"www": &bintree{nil, map[string]*bintree{
		"index.html": &bintree{wwwIndexHtml, map[string]*bintree{}},
		"js": &bintree{nil, map[string]*bintree{
			"reconnecting-websocket.min.js": &bintree{wwwJsReconnectingWebsocketMinJs, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

